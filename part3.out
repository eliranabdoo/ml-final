working on dbs [2, 10, 18, 26, 34, 42, 50, 58, 66, 74, 82, 90, 98, 106, 114, 122, 130, 138, 146]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:297: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.
  FutureWarning
2020-08-28 16:00:19.037281:schlvote.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:00:26.024596:schlvote.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:00:32.980189:schlvote.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:00:39.797057:schlvote.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:00:46.557138:schlvote.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:00:53.427735:schlvote.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:00.359355:schlvote.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:07.339675:schlvote.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:14.226113:schlvote.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:21.104544:schlvote.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results schlvote.csv
2020-08-28 16:01:27.996700:kidney.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:37.491559:kidney.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:46.890988:kidney.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:01:56.347061:kidney.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:05.797536:kidney.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:15.297726:kidney.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:24.765856:kidney.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:34.211957:kidney.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:43.787808:kidney.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:02:53.250057:kidney.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results kidney.csv
2020-08-28 16:03:02.578299:pittsburg-bridges-REL-L.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:03:33.366586:pittsburg-bridges-REL-L.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:04:04.160492:pittsburg-bridges-REL-L.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:04:34.972841:pittsburg-bridges-REL-L.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:05:06.117141:pittsburg-bridges-REL-L.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:05:37.015898:pittsburg-bridges-REL-L.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:06:08.142076:pittsburg-bridges-REL-L.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:06:39.013873:pittsburg-bridges-REL-L.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:07:09.972410:pittsburg-bridges-REL-L.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:07:40.662620:pittsburg-bridges-REL-L.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results pittsburg-bridges-REL-L.csv
2020-08-28 16:08:11.624356:acute-nephritis.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:08:22.830716:acute-nephritis.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:08:33.995588:acute-nephritis.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:08:45.145929:acute-nephritis.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:08:56.205436:acute-nephritis.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:09:07.308836:acute-nephritis.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:09:18.386565:acute-nephritis.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:09:29.463705:acute-nephritis.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:09:40.691405:acute-nephritis.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:09:51.867664:acute-nephritis.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
writing single db results acute-nephritis.csv
2020-08-28 16:10:02.992471:sleuth_case2002.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:10:15.614595:sleuth_case2002.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:10:28.211307:sleuth_case2002.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:10:40.787402:sleuth_case2002.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:10:53.484150:sleuth_case2002.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:11:06.175535:sleuth_case2002.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:11:18.772606:sleuth_case2002.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:11:31.387796:sleuth_case2002.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:11:44.113686:sleuth_case2002.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:11:56.892500:sleuth_case2002.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results sleuth_case2002.csv
2020-08-28 16:12:09.644351:wine.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: divide by zero encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
ERROR! Input contains NaN, infinity or a value too large for dtype('float64').
2020-08-28 16:13:04.541517:heart-va.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:14:23.822776:heart-va.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:15:43.768443:heart-va.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:17:03.146128:heart-va.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:18:22.547926:heart-va.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:19:40.340955:heart-va.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 16:21:00.119137:heart-va.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:22:19.571854:heart-va.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:23:36.819678:heart-va.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:24:54.718236:heart-va.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results heart-va.csv
2020-08-28 16:26:12.362245:bodyfat.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:26:32.528832:bodyfat.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:26:52.681939:bodyfat.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:27:12.461062:bodyfat.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:27:32.038015:bodyfat.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:27:51.519507:bodyfat.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:28:11.400699:bodyfat.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:28:31.378129:bodyfat.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:28:51.334145:bodyfat.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:29:11.413734:bodyfat.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results bodyfat.csv
2020-08-28 16:29:31.493379:heart-cleveland.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:30:53.980998:heart-cleveland.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:32:18.707334:heart-cleveland.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:33:42.878851:heart-cleveland.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:35:05.850608:heart-cleveland.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:36:30.476843:heart-cleveland.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:37:53.464459:heart-cleveland.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:39:16.378252:heart-cleveland.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:40:40.797710:heart-cleveland.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:42:05.224782:heart-cleveland.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results heart-cleveland.csv
2020-08-28 16:43:30.049018:ionosphere.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:44:03.123592:ionosphere.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:44:36.054364:ionosphere.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:45:08.968250:ionosphere.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:45:42.007224:ionosphere.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:46:15.615825:ionosphere.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:46:49.010142:ionosphere.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:47:21.821872:ionosphere.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:47:54.760590:ionosphere.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 16:48:27.621458:ionosphere.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results ionosphere.csv
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=10.
  % (min_groups, self.n_splits)), UserWarning)
2020-08-28 16:49:00.401865:arrhythmia.csv:Fold_1
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 17:16:08.628619:arrhythmia.csv:Fold_2
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 17:43:19.023602:arrhythmia.csv:Fold_3
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 18:11:58.708303:arrhythmia.csv:Fold_4
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 18:40:06.181579:arrhythmia.csv:Fold_5
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1814: UserWarning: y_pred contains classes not in y_true
  warnings.warn('y_pred contains classes not in y_true')
2020-08-28 19:08:58.875078:arrhythmia.csv:Fold_6
training our model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 2 members, which is less than n_splits=3.
  % (min_groups, self.n_splits)), UserWarning)
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1814: UserWarning: y_pred contains classes not in y_true
  warnings.warn('y_pred contains classes not in y_true')
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
ERROR! probabilities contain NaN
2020-08-28 19:36:51.477454:monks-3.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:37:06.263288:monks-3.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:37:21.008717:monks-3.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:37:35.697460:monks-3.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:37:50.496029:monks-3.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:38:05.325705:monks-3.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:38:20.034172:monks-3.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:38:34.789216:monks-3.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:38:49.587868:monks-3.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:39:04.369186:monks-3.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results monks-3.csv
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_split.py:672: UserWarning: The least populated class in y has only 8 members, which is less than n_splits=10.
  % (min_groups, self.n_splits)), UserWarning)
2020-08-28 19:39:19.237091:soybean.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:48:31.902595:soybean.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 19:57:46.423806:soybean.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:06:56.706873:soybean.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:16:13.155346:soybean.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: divide by zero encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: invalid value encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
ERROR! Input contains NaN, infinity or a value too large for dtype('float64').
2020-08-28 20:25:27.094480:pima.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:25:48.197598:pima.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:26:09.587384:pima.csv:Fold_3
training our model
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1029, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:26:30.239929:pima.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:26:51.700416:pima.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:27:12.676749:pima.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:27:34.217322:pima.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:27:55.666088:pima.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:28:17.221765:pima.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 20:28:38.768704:pima.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results pima.csv
2020-08-28 20:28:59.928000:led-display.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:31:30.128880:led-display.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:34:00.234367:led-display.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:36:30.121796:led-display.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:38:56.543934:led-display.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:41:26.118126:led-display.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:43:52.531907:led-display.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:46:19.625258:led-display.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:48:50.641791:led-display.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:51:21.073730:led-display.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results led-display.csv
2020-08-28 20:53:47.700947:baseball.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:56:05.987405:baseball.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 20:58:23.686441:baseball.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:00:41.800938:baseball.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:03:01.064352:baseball.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:05:20.277022:baseball.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:07:39.006965:baseball.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:09:57.150557:baseball.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:12:17.018548:baseball.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:14:35.133742:baseball.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results baseball.csv
2020-08-28 21:16:53.633557:car.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:18:08.801901:car.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:19:23.751978:car.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:20:38.532329:car.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:21:53.554509:car.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:23:08.486704:car.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:24:23.688901:car.csv:Fold_7
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:25:37.867207:car.csv:Fold_8
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:26:52.964676:car.csv:Fold_9
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:28:08.129060:car.csv:Fold_10
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
writing single db results car.csv
2020-08-28 21:29:23.046391:statlog-image.csv:Fold_1
training our model
main.py:522: RuntimeWarning: divide by zero encountered in true_divide
  d = np.squeeze(np.asarray(self.d_0 / uw_square.T))
main.py:486: RuntimeWarning: invalid value encountered in subtract
  e_x = np.exp(x - np.max(x))
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py:552: FitFailedWarning: Estimator fit failed. The score on this train-test partition for these parameters will be set to nan. Details: 
Traceback (most recent call last):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/model_selection/_validation.py", line 531, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 245, in fit
    for i, column in enumerate(columns))
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 1032, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 847, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 765, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 208, in apply_async
    result = ImmediateResult(func)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/_parallel_backends.py", line 572, in __init__
    self.results = batch()
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in __call__
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/joblib/parallel.py", line 253, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py", line 81, in _fit_binary
    estimator.fit(X, y)
  File "/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/pipeline.py", line 335, in fit
    self._final_estimator.fit(Xt, y, **fit_params_last_step)
  File "main.py", line 708, in fit
    return self._fitString(X, y)
  File "main.py", line 636, in _fitString
    self.w = np.matrix(self._update_learners_weights(t, d))
  File "main.py", line 556, in _update_learners_weights
    batch_indices = np.random.choice(a=list(range(n)), replace=False, p=samples_dist, size=batch_size)
  File "mtrand.pyx", line 928, in numpy.random.mtrand.RandomState.choice
ValueError: probabilities contain NaN

  FitFailedWarning)
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:39:58.936337:statlog-image.csv:Fold_2
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 21:50:48.877173:statlog-image.csv:Fold_3
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 22:01:36.779203:statlog-image.csv:Fold_4
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2020-08-28 22:12:24.580871:statlog-image.csv:Fold_5
training our model
Finished training our model
training comparison model
Finished training comparison model
2020-08-28 22:23:11.697461:statlog-image.csv:Fold_6
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: divide by zero encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: invalid value encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
ERROR! Input contains NaN, infinity or a value too large for dtype('float64').
2020-08-28 22:33:50.823501:waveform-noise.csv:Fold_1
training our model
Finished training our model
training comparison model
Finished training comparison model
/home/matanliber11/ml-final/venv/lib/python3.6/site-packages/sklearn/multiclass.py:382: RuntimeWarning: invalid value encountered in true_divide
  Y /= np.sum(Y, axis=1)[:, np.newaxis]
ERROR! Input contains NaN, infinity or a value too large for dtype('float64').
{'schlvote.csv': {'RBoost': [{'fold_num': 1, 'train_time': 6.547983169555664, 'infer_time': 0.6197094917297363, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 6.558491230010986, 'infer_time': 0.6303787231445312, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 6.421161413192749, 'infer_time': 0.4550814628601074, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.05847953216374269, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 6.362848281860352, 'infer_time': 0.3667473793029785, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.05847953216374269, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 6.472473621368408, 'infer_time': 0.516057014465332, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 6.5382771492004395, 'infer_time': 0.6250143051147461, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 6.58362078666687, 'infer_time': 0.6458163261413574, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 6.428468942642212, 'infer_time': 0.3750324249267578, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.05847953216374269, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 6.494088649749756, 'infer_time': 0.4544258117675781, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.05847953216374269, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.4444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6666666666666666, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 6.492672920227051, 'infer_time': 0.4858175913492839, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.05847953216374269, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.4444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6666666666666666, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 0.39516472816467285, 'infer_time': 0.1856088638305664, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 0.3577864170074463, 'infer_time': 0.17690658569335938, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 0.35707712173461914, 'infer_time': 0.17511844635009766, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 0.35993051528930664, 'infer_time': 0.17315149307250977, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 0.35962963104248047, 'infer_time': 0.1742243766784668, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 0.3534116744995117, 'infer_time': 0.17279386520385742, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 0.35712313652038574, 'infer_time': 0.17398595809936523, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 0.4204752445220947, 'infer_time': 0.1760721206665039, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.5625, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 0.3473362922668457, 'infer_time': 0.23023287455240884, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.4444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6666666666666666, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 0.3592514991760254, 'infer_time': 0.23595492045084634, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.4444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6666666666666666, 'roc_auc': 0.5}]}, 'kidney.csv': {'RBoost': [{'fold_num': 1, 'train_time': 8.695983648300171, 'infer_time': 0.3559291362762451, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 8.622750520706177, 'infer_time': 0.3453195095062256, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 8.691206216812134, 'infer_time': 0.3623366355895996, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 8.633044958114624, 'infer_time': 0.3845393657684326, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 8.741157531738281, 'infer_time': 0.34993886947631836, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 8.668722152709961, 'infer_time': 0.35241246223449707, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 8.683806657791138, 'infer_time': 0.4028592790876116, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.32653061224489793, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5714285714285714, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 8.826017618179321, 'infer_time': 0.385352543422154, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.32653061224489793, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5714285714285714, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 8.688968658447266, 'infer_time': 0.3898484366280692, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.32653061224489793, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5714285714285714, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 8.548367738723755, 'infer_time': 0.2719674791608538, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.029239766081871343, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.32653061224489793, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5714285714285714, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 0.744070291519165, 'infer_time': 0.09801983833312988, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.625, 'precision': 0.6333333333333333, 'fpr': 0.5, 'tpr': 0.75, 'pr_auc': 0.575, 'roc_auc': 0.625}, {'fold_num': 2, 'train_time': 0.7239553928375244, 'infer_time': 0.10755658149719238, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.25, 'precision': 0.16666666666666666, 'fpr': 1.0, 'tpr': 0.5, 'pr_auc': 0.7321428571428572, 'roc_auc': 0.25}, {'fold_num': 3, 'train_time': 0.7119696140289307, 'infer_time': 0.11992454528808594, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.625, 'precision': 0.6333333333333333, 'fpr': 0.25, 'tpr': 0.5, 'pr_auc': 0.8125, 'roc_auc': 0.625}, {'fold_num': 4, 'train_time': 0.7621345520019531, 'infer_time': 0.10788440704345703, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6916666666666667, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 0.7052745819091797, 'infer_time': 0.0915229320526123, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.75, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 0.7453908920288086, 'infer_time': 0.09223818778991699, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.75, 'precision': 0.75, 'fpr': 0.25, 'tpr': 0.75, 'pr_auc': 0.95, 'roc_auc': 0.75}, {'fold_num': 7, 'train_time': 0.7084143161773682, 'infer_time': 0.10439327784946986, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 8, 'train_time': 0.6972451210021973, 'infer_time': 0.11249950953892299, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.3333333333333333, 'precision': 0.14285714285714285, 'fpr': 0.3333333333333333, 'tpr': 0.0, 'pr_auc': 0.7625, 'roc_auc': 0.33333333333333337}, {'fold_num': 9, 'train_time': 0.7182540893554688, 'infer_time': 0.11757441929408483, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.41666666666666663, 'precision': 0.42857142857142855, 'fpr': 0.6666666666666666, 'tpr': 0.5, 'pr_auc': 0.6666666666666666, 'roc_auc': 0.41666666666666663}, {'fold_num': 10, 'train_time': 0.7260782718658447, 'infer_time': 0.11883463178362165, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.625, 'precision': 0.7857142857142857, 'fpr': 0.0, 'tpr': 0.25, 'pr_auc': 1.0, 'roc_auc': 0.625}]}, 'pittsburg-bridges-REL-L.csv': {'RBoost': [{'fold_num': 1, 'train_time': 28.833728551864624, 'infer_time': 0.6133643063631924, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.29752066115702475, 'fpr': 0.09090909090909091, 'tpr': 0.09090909090909091, 'pr_auc': 0.3047291092745638, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 28.816730260849, 'infer_time': 0.6202350963245739, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.29752066115702475, 'fpr': 0.36363636363636365, 'tpr': 0.36363636363636365, 'pr_auc': 0.5576544667453758, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 28.93456482887268, 'infer_time': 0.6120204925537109, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.29752066115702475, 'fpr': 0.36363636363636365, 'tpr': 0.36363636363636365, 'pr_auc': 0.37396694214876025, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 29.143295288085938, 'infer_time': 0.66375732421875, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.4, 'tpr': 0.4, 'pr_auc': 0.39333333333333337, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 29.007012605667114, 'infer_time': 0.6417751312255859, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.4, 'tpr': 0.4, 'pr_auc': 0.46, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 29.203261137008667, 'infer_time': 0.6697416305541992, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.3, 'tpr': 0.3, 'pr_auc': 0.4741666666666666, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 29.043773651123047, 'infer_time': 0.6365060806274414, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.3, 'tpr': 0.3, 'pr_auc': 0.37650793650793646, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 29.019986152648926, 'infer_time': 0.6497621536254883, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.3, 'tpr': 0.3, 'pr_auc': 0.37, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 28.8310968875885, 'infer_time': 0.6304502487182617, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.2, 'tpr': 0.2, 'pr_auc': 0.2824761904761905, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 29.021507501602173, 'infer_time': 0.6388425827026367, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.02157497303128371, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.2, 'tpr': 0.2, 'pr_auc': 0.36, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 1.8816277980804443, 'infer_time': 0.12369589372114703, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.3333333333333333, 'precision': 0.1322314049586777, 'fpr': 0.5454545454545454, 'tpr': 0.5454545454545454, 'pr_auc': 0.5209235209235209, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 1.9101111888885498, 'infer_time': 0.107353383844549, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.5555555555555555, 'precision': 0.8, 'fpr': 0.09090909090909093, 'tpr': 0.7878787878787878, 'pr_auc': 0.8978354978354978, 'roc_auc': 0.8484848484848484}, {'fold_num': 3, 'train_time': 1.810276746749878, 'infer_time': 0.10093775662508878, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.9444444444444445, 'precision': 0.9272727272727272, 'fpr': 0.0779220779220779, 'tpr': 0.9393939393939393, 'pr_auc': 0.8047619047619047, 'roc_auc': 0.9307359307359307}, {'fold_num': 4, 'train_time': 1.9302496910095215, 'infer_time': 0.12328624725341797, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 0.7840000000000001, 'roc_auc': 1.0}, {'fold_num': 5, 'train_time': 1.8213720321655273, 'infer_time': 0.11620521545410156, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 0.7157777777777778, 'roc_auc': 1.0}, {'fold_num': 6, 'train_time': 1.8548688888549805, 'infer_time': 0.11153221130371094, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.37777777777777777, 'precision': 0.55, 'fpr': 0.265, 'tpr': 0.4066666666666666, 'pr_auc': 0.8064285714285715, 'roc_auc': 0.5708333333333333}, {'fold_num': 7, 'train_time': 1.7614548206329346, 'infer_time': 0.1024007797241211, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.5888888888888889, 'precision': 0.6, 'fpr': 0.21642857142857141, 'tpr': 0.6133333333333333, 'pr_auc': 0.8227619047619046, 'roc_auc': 0.6984523809523808}, {'fold_num': 8, 'train_time': 1.867457389831543, 'infer_time': 0.11386871337890625, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.3333333333333333, 'precision': 0.2777777777777778, 'fpr': 0.265, 'tpr': 0.3, 'pr_auc': 0.5721428571428572, 'roc_auc': 0.5175}, {'fold_num': 9, 'train_time': 1.7925479412078857, 'infer_time': 0.1031637191772461, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.3111111111111111, 'precision': 0.4, 'fpr': 0.2664285714285714, 'tpr': 0.2866666666666666, 'pr_auc': 0.3611428571428571, 'roc_auc': 0.5101190476190476}, {'fold_num': 10, 'train_time': 1.8722455501556396, 'infer_time': 0.10330677032470703, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.3333333333333333, 'precision': 0.25, 'fpr': 0.2, 'tpr': 0.2, 'pr_auc': 0.4207222222222222, 'roc_auc': 0.5}]}, 'acute-nephritis.csv': {'RBoost': [{'fold_num': 1, 'train_time': 10.40540075302124, 'infer_time': 0.25824705759684247, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.34027777777777785, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.4166666666666667, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 10.310271739959717, 'infer_time': 0.26541948318481445, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.34027777777777785, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.4166666666666667, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 10.295507431030273, 'infer_time': 0.26166439056396484, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 4, 'train_time': 10.24398398399353, 'infer_time': 0.2505183219909668, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.8, 'precision': 0.8703703703703703, 'fpr': 0.0, 'tpr': 0.6, 'pr_auc': 0.7666666666666666, 'roc_auc': 0.8}, {'fold_num': 5, 'train_time': 10.269660234451294, 'infer_time': 0.2567966779073079, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 6, 'train_time': 10.234027862548828, 'infer_time': 0.26430686314900714, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 7, 'train_time': 10.236417293548584, 'infer_time': 0.30926863352457684, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.7, 'precision': 0.8249999999999998, 'fpr': 0.0, 'tpr': 0.4, 'pr_auc': 0.65, 'roc_auc': 0.7000000000000001}, {'fold_num': 8, 'train_time': 10.352225542068481, 'infer_time': 0.2665519714355469, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.9, 'precision': 0.9270833333333334, 'fpr': 0.0, 'tpr': 0.8, 'pr_auc': 0.9428571428571428, 'roc_auc': 0.8999999999999999}, {'fold_num': 9, 'train_time': 10.364380836486816, 'infer_time': 0.30726194381713867, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.8, 'precision': 0.8703703703703703, 'fpr': 0.0, 'tpr': 0.6, 'pr_auc': 0.8, 'roc_auc': 0.8}, {'fold_num': 10, 'train_time': 10.286221265792847, 'infer_time': 0.25258461634318036, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.018518518518518517, 'estimator__model__T': 10}, 'accuracy': 0.7, 'precision': 0.8249999999999998, 'fpr': 0.0, 'tpr': 0.4, 'pr_auc': 0.65, 'roc_auc': 0.7000000000000001}], 'LGBoost': [{'fold_num': 1, 'train_time': 0.7584302425384521, 'infer_time': 0.07396936416625977, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.6, 'precision': 0.7878787878787877, 'fpr': 0.0, 'tpr': 0.2, 'pr_auc': 1.0, 'roc_auc': 0.6}, {'fold_num': 2, 'train_time': 0.8125979900360107, 'infer_time': 0.06264448165893555, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 3, 'train_time': 0.8121891021728516, 'infer_time': 0.06252527236938477, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 4, 'train_time': 0.7737014293670654, 'infer_time': 0.06288290023803711, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 5, 'train_time': 0.7916686534881592, 'infer_time': 0.06290276845296223, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 6, 'train_time': 0.8016567230224609, 'infer_time': 0.06041924158732096, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 7, 'train_time': 0.7981352806091309, 'infer_time': 0.06312131881713867, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 8, 'train_time': 0.8330435752868652, 'infer_time': 0.08577108383178711, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 9, 'train_time': 0.7689545154571533, 'infer_time': 0.06381670633951823, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 10, 'train_time': 0.7926976680755615, 'infer_time': 0.07895628611246745, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}]}, 'sleuth_case2002.csv': {'RBoost': [{'fold_num': 1, 'train_time': 11.7412691116333, 'infer_time': 0.21735827128092447, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 11.718132257461548, 'infer_time': 0.2315044403076172, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 11.674363374710083, 'infer_time': 0.22017161051432294, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5666666666666667, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 11.791679382324219, 'infer_time': 0.2242883046468099, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 11.780633449554443, 'infer_time': 0.2243359883626302, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 11.703548908233643, 'infer_time': 0.23557345072428387, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 11.742905855178833, 'infer_time': 0.22595723470052084, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.28444444444444444, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5333333333333333, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 11.820966482162476, 'infer_time': 0.23436546325683594, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 11.87527871131897, 'infer_time': 0.23652826036725724, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 11.855771541595459, 'infer_time': 0.23462091173444474, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.01511715797430083, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.32653061224489793, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5714285714285714, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 0.837681770324707, 'infer_time': 0.0492095947265625, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.6071428571428572, 'precision': 0.6148148148148148, 'fpr': 0.2857142857142857, 'tpr': 0.5, 'pr_auc': 0.7974702380952381, 'roc_auc': 0.6071428571428571}, {'fold_num': 2, 'train_time': 0.8363871574401855, 'infer_time': 0.05442301432291667, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.9285714285714286, 'precision': 0.9407407407407408, 'fpr': 0.14285714285714285, 'tpr': 1.0, 'pr_auc': 0.814781746031746, 'roc_auc': 0.9285714285714286}, {'fold_num': 3, 'train_time': 0.8583433628082275, 'infer_time': 0.054454803466796875, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.5982142857142857, 'precision': 0.6, 'fpr': 0.42857142857142855, 'tpr': 0.625, 'pr_auc': 0.6304029304029304, 'roc_auc': 0.5982142857142857}, {'fold_num': 4, 'train_time': 0.85939621925354, 'infer_time': 0.06028811136881511, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7946428571428572, 'precision': 0.8037037037037038, 'fpr': 0.2857142857142857, 'tpr': 0.875, 'pr_auc': 0.8623511904761905, 'roc_auc': 0.7946428571428572}, {'fold_num': 5, 'train_time': 0.8664860725402832, 'infer_time': 0.05784034729003906, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.8035714285714286, 'precision': 0.8071428571428572, 'fpr': 0.14285714285714285, 'tpr': 0.75, 'pr_auc': 0.8839743589743589, 'roc_auc': 0.8035714285714286}, {'fold_num': 6, 'train_time': 0.8476657867431641, 'infer_time': 0.0560760498046875, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.5535714285714286, 'precision': 0.5888888888888888, 'fpr': 0.14285714285714285, 'tpr': 0.25, 'pr_auc': 0.5943181818181817, 'roc_auc': 0.5535714285714287}, {'fold_num': 7, 'train_time': 0.8296277523040771, 'infer_time': 0.050512949625651046, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.5357142857142857, 'precision': 0.5380952380952381, 'fpr': 0.42857142857142855, 'tpr': 0.5, 'pr_auc': 0.690625, 'roc_auc': 0.5357142857142857}, {'fold_num': 8, 'train_time': 0.8610818386077881, 'infer_time': 0.06076267787388393, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.7857142857142857, 'precision': 0.7916666666666667, 'fpr': 0.14285714285714285, 'tpr': 0.7142857142857143, 'pr_auc': 0.7912087912087911, 'roc_auc': 0.7857142857142858}, {'fold_num': 9, 'train_time': 0.8578627109527588, 'infer_time': 0.06670611245291573, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.5714285714285714, 'precision': 0.5777777777777777, 'fpr': 0.2857142857142857, 'tpr': 0.42857142857142855, 'pr_auc': 0.6694400837257979, 'roc_auc': 0.5714285714285714}, {'fold_num': 10, 'train_time': 0.8500335216522217, 'infer_time': 0.05459785461425781, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.7916666666666667, 'precision': 0.7959183673469388, 'fpr': 0.16666666666666666, 'tpr': 0.75, 'pr_auc': 0.8998397435897435, 'roc_auc': 0.7916666666666667}]}, 'heart-va.csv': {'RBoost': [{'fold_num': 1, 'train_time': 74.93922805786133, 'infer_time': 0.7173895835876465, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.016666666666666666, 'estimator__model__T': 10}, 'accuracy': 0.05, 'precision': 0.02, 'fpr': 0.15285087719298246, 'tpr': 0.05, 'pr_auc': 0.3860331253713607, 'roc_auc': 0.44857456140350876}, {'fold_num': 2, 'train_time': 75.59953022003174, 'infer_time': 0.72174072265625, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 10}, 'accuracy': 0.29, 'precision': 0.11666666666666667, 'fpr': 0.12644736842105264, 'tpr': 0.16, 'pr_auc': 0.33664619694031456, 'roc_auc': 0.5167763157894738}, {'fold_num': 3, 'train_time': 74.99828147888184, 'infer_time': 0.7116794586181641, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.011111111111111112, 'estimator__model__T': 10}, 'accuracy': 0.29333333333333333, 'precision': 0.2333333333333333, 'fpr': 0.17809523809523808, 'tpr': 0.32666666666666666, 'pr_auc': 0.2734313725490196, 'roc_auc': 0.5742857142857143}, {'fold_num': 4, 'train_time': 75.07900857925415, 'infer_time': 0.7083892822265625, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.016666666666666666, 'estimator__model__T': 10}, 'accuracy': 0.17333333333333334, 'precision': 0.16071428571428573, 'fpr': 0.2534821428571429, 'tpr': 0.19333333333333333, 'pr_auc': 0.345837118248109, 'roc_auc': 0.46992559523809524}, {'fold_num': 5, 'train_time': 73.36267971992493, 'infer_time': 0.40389299392700195, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.06666666666666667, 'precision': 0.12000000000000002, 'fpr': 0.1275610902255639, 'tpr': 0.06666666666666667, 'pr_auc': 0.26145220824497145, 'roc_auc': 0.46955278822055135}, {'fold_num': 6, 'train_time': 75.47386908531189, 'infer_time': 0.7151246070861816, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.011111111111111112, 'estimator__model__T': 10}, 'accuracy': 0.4033333333333333, 'precision': 0.5701923076923077, 'fpr': 0.15997807017543858, 'tpr': 0.2658333333333333, 'pr_auc': 0.3842307692307693, 'roc_auc': 0.5529276315789474}, {'fold_num': 7, 'train_time': 75.06859183311462, 'infer_time': 0.7305502891540527, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.016666666666666666, 'estimator__model__T': 10}, 'accuracy': 0.22000000000000003, 'precision': 0.31375000000000003, 'fpr': 0.19702380952380955, 'tpr': 0.245, 'pr_auc': 0.36085139860139864, 'roc_auc': 0.5239880952380953}, {'fold_num': 8, 'train_time': 72.98021245002747, 'infer_time': 0.2688288688659668, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 20, 'estimator__model__kappa': 0.011111111111111112, 'estimator__model__T': 3}, 'accuracy': 0.2, 'precision': 0.003125, 'fpr': 0.11239035087719298, 'tpr': 0.05, 'pr_auc': 0.26952130772564203, 'roc_auc': 0.46880482456140343}, {'fold_num': 9, 'train_time': 73.57157063484192, 'infer_time': 0.4111647605895996, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.011111111111111112, 'estimator__model__T': 5}, 'accuracy': 0.16, 'precision': 0.11111111111111112, 'fpr': 0.12264254385964912, 'tpr': 0.16000000000000003, 'pr_auc': 0.41585072091651043, 'roc_auc': 0.5186787280701756}, {'fold_num': 10, 'train_time': 73.3319787979126, 'infer_time': 0.4056572914123535, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.011111111111111112, 'estimator__model__T': 5}, 'accuracy': 0.26, 'precision': 0.26319444444444445, 'fpr': 0.19013157894736843, 'tpr': 0.30000000000000004, 'pr_auc': 0.26543730650154795, 'roc_auc': 0.5549342105263158}], 'LGBoost': [{'fold_num': 1, 'train_time': 4.233674764633179, 'infer_time': 0.09654760360717773, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.16, 'precision': 0.16666666666666666, 'fpr': 0.24583333333333335, 'tpr': 0.2, 'pr_auc': 0.24214365570789717, 'roc_auc': 0.4770833333333333}, {'fold_num': 2, 'train_time': 4.239112615585327, 'infer_time': 0.0970005989074707, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.24333333333333335, 'precision': 0.23333333333333334, 'fpr': 0.2307142857142857, 'tpr': 0.33166666666666667, 'pr_auc': 0.26971197103550043, 'roc_auc': 0.5504761904761906}, {'fold_num': 3, 'train_time': 4.27152156829834, 'infer_time': 0.10467767715454102, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.39666666666666667, 'precision': 0.4809523809523809, 'fpr': 0.1444642857142857, 'tpr': 0.4633333333333334, 'pr_auc': 0.41194547755306266, 'roc_auc': 0.6594345238095238}, {'fold_num': 4, 'train_time': 4.216504096984863, 'infer_time': 0.09760856628417969, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.24, 'precision': 0.2733333333333333, 'fpr': 0.22375, 'tpr': 0.26, 'pr_auc': 0.46813208721103455, 'roc_auc': 0.5181250000000001}, {'fold_num': 5, 'train_time': 4.326986312866211, 'infer_time': 0.1252889633178711, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.25666666666666665, 'precision': 0.3166666666666667, 'fpr': 0.21278038847117797, 'tpr': 0.3066666666666667, 'pr_auc': 0.20057715981129295, 'roc_auc': 0.5469431390977444}, {'fold_num': 6, 'train_time': 4.1966071128845215, 'infer_time': 0.10616779327392578, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.2966666666666667, 'precision': 0.35738095238095235, 'fpr': 0.18510181704260653, 'tpr': 0.3466666666666667, 'pr_auc': 0.221506911797353, 'roc_auc': 0.58078242481203}, {'fold_num': 7, 'train_time': 4.275715589523315, 'infer_time': 0.0994563102722168, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.33666666666666667, 'precision': 0.4133333333333333, 'fpr': 0.17196428571428574, 'tpr': 0.3783333333333333, 'pr_auc': 0.3314002251618351, 'roc_auc': 0.6031845238095238}, {'fold_num': 8, 'train_time': 4.180183410644531, 'infer_time': 0.0916600227355957, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.19666666666666668, 'precision': 0.21666666666666665, 'fpr': 0.225, 'tpr': 0.21666666666666667, 'pr_auc': 0.32985994268889, 'roc_auc': 0.49583333333333335}, {'fold_num': 9, 'train_time': 4.224604845046997, 'infer_time': 0.11039972305297852, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.24000000000000005, 'precision': 0.29166666666666663, 'fpr': 0.216875, 'tpr': 0.28, 'pr_auc': 0.2895992720514779, 'roc_auc': 0.5315625}, {'fold_num': 10, 'train_time': 4.211812973022461, 'infer_time': 0.10887384414672852, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.21000000000000002, 'precision': 0.28055555555555556, 'fpr': 0.23750000000000002, 'tpr': 0.25, 'pr_auc': 0.35363547271442003, 'roc_auc': 0.50625}]}, 'bodyfat.csv': {'RBoost': [{'fold_num': 1, 'train_time': 19.168601036071777, 'infer_time': 0.1567510458139273, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.004409171075837742, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 19.13407850265503, 'infer_time': 0.15680606548602766, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.5, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 18.810520887374878, 'infer_time': 0.07762908935546875, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 20, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.2304, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.52, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 18.618253469467163, 'infer_time': 0.07999420166015625, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 20, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.2304, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.52, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 18.52344846725464, 'infer_time': 0.07982254028320312, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 3}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.48, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 18.89783549308777, 'infer_time': 0.1621532440185547, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.4601388888888889, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 18.999406576156616, 'infer_time': 0.1677703857421875, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.5233333333333333, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 18.999456882476807, 'infer_time': 0.1654529571533203, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.004409171075837742, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.5233333333333333, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 19.113016843795776, 'infer_time': 0.16195297241210938, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.48, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 19.11909556388855, 'infer_time': 0.1578235626220703, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.008818342151675485, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2704, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.48, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 0.9514868259429932, 'infer_time': 0.028894497798039362, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.9615384615384616, 'precision': 0.9642857142857142, 'fpr': 0.0, 'tpr': 0.9230769230769231, 'pr_auc': 0.9615384615384616, 'roc_auc': 0.9615384615384616}, {'fold_num': 2, 'train_time': 0.972442626953125, 'infer_time': 0.03301180326021634, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 3, 'train_time': 0.9260201454162598, 'infer_time': 0.03084182739257813, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 4, 'train_time': 0.9147202968597412, 'infer_time': 0.03270149230957031, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 5, 'train_time': 0.9142544269561768, 'infer_time': 0.03430366516113281, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 6, 'train_time': 0.9371030330657959, 'infer_time': 0.03191947937011719, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 7, 'train_time': 0.9308469295501709, 'infer_time': 0.03261566162109375, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 8, 'train_time': 0.9091839790344238, 'infer_time': 0.034160614013671875, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 9, 'train_time': 0.9190571308135986, 'infer_time': 0.0305938720703125, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 10, 'train_time': 0.9121150970458984, 'infer_time': 0.03292083740234375, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}]}, 'heart-cleveland.csv': {'RBoost': [{'fold_num': 1, 'train_time': 77.14893007278442, 'infer_time': 0.2147920670047883, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 20, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 3}, 'accuracy': 0.2, 'precision': 0.3007284079084287, 'fpr': 0.5483870967741935, 'tpr': 0.5483870967741935, 'pr_auc': 0.46267177774790447, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 79.34034633636475, 'infer_time': 0.6003995095529865, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.011001100110011002, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.3007284079084287, 'fpr': 0.5483870967741935, 'tpr': 0.5483870967741935, 'pr_auc': 0.46561333631223695, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 78.88171982765198, 'infer_time': 0.5900398377449282, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.3007284079084287, 'fpr': 0.5483870967741935, 'tpr': 0.5483870967741935, 'pr_auc': 0.5935280772801995, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 77.5406424999237, 'infer_time': 0.3339131673177083, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.2, 'precision': 0.32111111111111107, 'fpr': 0.5666666666666668, 'tpr': 0.5666666666666668, 'pr_auc': 0.5216812048521194, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 79.20577788352966, 'infer_time': 0.6032307942708333, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.011001100110011002, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.28444444444444444, 'fpr': 0.13333333333333333, 'tpr': 0.13333333333333333, 'pr_auc': 0.21004917921584587, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 77.60726022720337, 'infer_time': 0.3338813781738281, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.2, 'precision': 0.2942528735632184, 'fpr': 0.16009523809523812, 'tpr': 0.16666666666666669, 'pr_auc': 0.18840471925949867, 'roc_auc': 0.5032857142857143}, {'fold_num': 7, 'train_time': 77.59979581832886, 'infer_time': 0.3347237904866537, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 5}, 'accuracy': 0.2, 'precision': 0.28444444444444444, 'fpr': 0.13333333333333336, 'tpr': 0.13333333333333336, 'pr_auc': 0.1695257681616708, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 79.10898232460022, 'infer_time': 0.5901177724202473, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.28444444444444444, 'fpr': 0.13333333333333336, 'tpr': 0.13333333333333336, 'pr_auc': 0.20787656117828532, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 79.0261070728302, 'infer_time': 0.6173133850097656, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.28444444444444444, 'fpr': 0.16666666666666669, 'tpr': 0.16666666666666669, 'pr_auc': 0.22923059964726633, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 79.41492199897766, 'infer_time': 0.6061792373657227, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.007334066740007334, 'estimator__model__T': 10}, 'accuracy': 0.2, 'precision': 0.28444444444444444, 'fpr': 0.16666666666666669, 'tpr': 0.16666666666666669, 'pr_auc': 0.19152579365079364, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 5.241515636444092, 'infer_time': 0.08280046524540072, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.3, 'precision': 0.5124633431085044, 'fpr': 0.22778801843317972, 'tpr': 0.596774193548387, 'pr_auc': 0.7154200032701459, 'roc_auc': 0.6844930875576036}, {'fold_num': 2, 'train_time': 5.263239145278931, 'infer_time': 0.07427123285108997, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.38823529411764707, 'precision': 0.5193548387096775, 'fpr': 0.19290322580645158, 'tpr': 0.6774193548387096, 'pr_auc': 0.7263828163991376, 'roc_auc': 0.742258064516129}, {'fold_num': 3, 'train_time': 5.171912431716919, 'infer_time': 0.06913369701754661, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.3333333333333333, 'precision': 0.4624633431085044, 'fpr': 0.2308294930875576, 'tpr': 0.6774193548387096, 'pr_auc': 0.6340915562127986, 'roc_auc': 0.723294930875576}, {'fold_num': 4, 'train_time': 5.3248419761657715, 'infer_time': 0.0896771748860677, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.27647058823529413, 'precision': 0.56, 'fpr': 0.1438844680223991, 'tpr': 0.5666666666666668, 'pr_auc': 0.6928594861928196, 'roc_auc': 0.7113910993221337}, {'fold_num': 5, 'train_time': 5.299379825592041, 'infer_time': 0.07453759511311848, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.3375, 'precision': 0.5444444444444445, 'fpr': 0.10970152133945238, 'tpr': 0.3416666666666667, 'pr_auc': 0.182416533866936, 'roc_auc': 0.6159825726636071}, {'fold_num': 6, 'train_time': 5.275281667709351, 'infer_time': 0.07712046305338541, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.2125, 'precision': 0.4777777777777778, 'fpr': 0.18802197802197804, 'tpr': 0.14375000000000002, 'pr_auc': 0.1829700949062306, 'roc_auc': 0.477864010989011}, {'fold_num': 7, 'train_time': 5.212101221084595, 'infer_time': 0.06985664367675781, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.2375, 'precision': 0.4, 'fpr': 0.12350915750915752, 'tpr': 0.25833333333333336, 'pr_auc': 0.1569595610301463, 'roc_auc': 0.567412087912088}, {'fold_num': 8, 'train_time': 5.192847013473511, 'infer_time': 0.07386207580566406, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.365, 'precision': 0.5596491228070176, 'fpr': 0.1076225843122395, 'tpr': 0.4183333333333334, 'pr_auc': 0.19780564460349803, 'roc_auc': 0.655355374510547}, {'fold_num': 9, 'train_time': 5.283692836761475, 'infer_time': 0.07245540618896484, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.325, 'precision': 0.5288888888888889, 'fpr': 0.1198901098901099, 'tpr': 0.4208333333333334, 'pr_auc': 0.21076035579307015, 'roc_auc': 0.6504716117216118}, {'fold_num': 10, 'train_time': 5.28220272064209, 'infer_time': 0.08628368377685547, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.25, 'precision': 0.43232323232323233, 'fpr': 0.13323935834280662, 'tpr': 0.30000000000000004, 'pr_auc': 0.3711000276791593, 'roc_auc': 0.5833803208285968}]}, 'ionosphere.csv': {'RBoost': [{'fold_num': 1, 'train_time': 31.220977783203125, 'infer_time': 0.12207693523830838, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.408179012345679, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6388888888888888, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 31.102922439575195, 'infer_time': 0.3393581935337612, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.43183673469387757, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6571428571428571, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 31.07962441444397, 'infer_time': 0.13434546334402903, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.43183673469387757, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6571428571428571, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 31.117839336395264, 'infer_time': 0.13448851449148996, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.43183673469387757, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6571428571428571, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 31.69315218925476, 'infer_time': 0.13676370893205914, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.43183673469387757, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6571428571428571, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 31.570311069488525, 'infer_time': 0.1396111079624721, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.39510204081632655, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6285714285714286, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 31.016218900680542, 'infer_time': 0.11985642569405693, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.39510204081632655, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6285714285714286, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 31.127702713012695, 'infer_time': 0.14063971383231025, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.39510204081632655, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6285714285714286, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 31.006357669830322, 'infer_time': 0.11772428240094865, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.39510204081632655, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6285714285714286, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 30.94486689567566, 'infer_time': 0.1338209424700056, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.006331117442228553, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.39510204081632655, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.6285714285714286, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 1.7987000942230225, 'infer_time': 0.03446473015679253, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.8244147157190636, 'precision': 0.8655982905982906, 'fpr': 0.3076923076923077, 'tpr': 0.9565217391304348, 'pr_auc': 0.9855470616340181, 'roc_auc': 0.8244147157190637}, {'fold_num': 2, 'train_time': 1.7655971050262451, 'infer_time': 0.03435952322823661, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.894927536231884, 'precision': 0.914069264069264, 'fpr': 0.16666666666666666, 'tpr': 0.9565217391304348, 'pr_auc': 0.9490576497357356, 'roc_auc': 0.8949275362318841}, {'fold_num': 3, 'train_time': 1.780325174331665, 'infer_time': 0.033787318638392856, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.9148550724637681, 'precision': 0.9173826173826175, 'fpr': 0.08333333333333333, 'tpr': 0.9130434782608695, 'pr_auc': 0.9962980466288592, 'roc_auc': 0.9148550724637681}, {'fold_num': 4, 'train_time': 1.8632442951202393, 'infer_time': 0.03653935023716518, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.8115942028985508, 'precision': 0.8608058608058607, 'fpr': 0.3333333333333333, 'tpr': 0.9565217391304348, 'pr_auc': 0.9273463693948047, 'roc_auc': 0.8115942028985507}, {'fold_num': 5, 'train_time': 1.8595952987670898, 'infer_time': 0.033548900059291294, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.8731884057971014, 'precision': 0.8857142857142857, 'fpr': 0.16666666666666666, 'tpr': 0.9130434782608695, 'pr_auc': 0.9719318384889414, 'roc_auc': 0.8731884057971016}, {'fold_num': 6, 'train_time': 1.7683377265930176, 'infer_time': 0.03839901515415736, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.8461538461538461, 'precision': 0.9032967032967033, 'fpr': 0.3076923076923077, 'tpr': 1.0, 'pr_auc': 0.9192378143247126, 'roc_auc': 0.8461538461538461}, {'fold_num': 7, 'train_time': 1.744732141494751, 'infer_time': 0.02956390380859375, 'best_params': {'estimator__model__learning_rate': 0.1257563696803999, 'estimator__model__max_depth': 17, 'estimator__model__n_estimators': 148, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 9.566126547686462}, 'accuracy': 0.9230769230769231, 'precision': 0.9476190476190476, 'fpr': 0.15384615384615385, 'tpr': 1.0, 'pr_auc': 0.9999999999999998, 'roc_auc': 0.9230769230769231}, {'fold_num': 8, 'train_time': 1.7602753639221191, 'infer_time': 0.027929033551897322, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.9772727272727273, 'precision': 0.973469387755102, 'fpr': 0.0, 'tpr': 0.9545454545454545, 'pr_auc': 0.9999999999999998, 'roc_auc': 0.9772727272727274}, {'fold_num': 9, 'train_time': 1.8034160137176514, 'infer_time': 0.030735560825892856, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 0.9999999999999998, 'roc_auc': 1.0}, {'fold_num': 10, 'train_time': 1.7830514907836914, 'infer_time': 0.027976717267717634, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.9003496503496504, 'precision': 0.9143892339544514, 'fpr': 0.15384615384615385, 'tpr': 0.9545454545454545, 'pr_auc': 0.9782008436054619, 'roc_auc': 0.9003496503496503}]}, 'monks-3.csv': {'RBoost': [{'fold_num': 1, 'train_time': 13.456938743591309, 'infer_time': 0.11096256119864327, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2681760204081633, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5178571428571429, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 13.41324520111084, 'infer_time': 0.11261446135384696, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2681760204081633, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5178571428571429, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 13.338455438613892, 'infer_time': 0.11092850140162877, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2681760204081633, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5178571428571429, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 13.38695764541626, 'infer_time': 0.10998759950910296, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2681760204081633, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5178571428571429, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 13.38558053970337, 'infer_time': 0.11201771822842684, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2780165289256198, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5272727272727272, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 13.355986833572388, 'infer_time': 0.1138340343128551, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2780165289256198, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5272727272727272, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 13.356534957885742, 'infer_time': 0.11343522505326706, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2780165289256198, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5272727272727272, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 13.434349298477173, 'infer_time': 0.10970722545276988, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.2780165289256198, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.5272727272727272, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 13.38431978225708, 'infer_time': 0.11354793201793324, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25917355371900824, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.509090909090909, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 13.46349310874939, 'infer_time': 0.11167092756791548, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.004011231448054552, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.25917355371900824, 'fpr': 1.0, 'tpr': 1.0, 'pr_auc': 0.509090909090909, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 1.267240047454834, 'infer_time': 0.01980151448931013, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.6883780332056194, 'precision': 0.7695502172246359, 'fpr': 0.037037037037037035, 'tpr': 0.41379310344827586, 'pr_auc': 0.7376828306111507, 'roc_auc': 0.6883780332056194}, {'fold_num': 2, 'train_time': 1.2792861461639404, 'infer_time': 0.018737145832606723, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.7745849297573435, 'precision': 0.8189745196324143, 'fpr': 0.037037037037037035, 'tpr': 0.5862068965517241, 'pr_auc': 0.881254727716988, 'roc_auc': 0.7745849297573436}, {'fold_num': 3, 'train_time': 1.3016667366027832, 'infer_time': 0.014930963516235352, 'best_params': {'estimator__model__learning_rate': 0.0022982589327912445, 'estimator__model__max_depth': 11, 'estimator__model__n_estimators': 190, 'estimator__model__num_leaves': 23, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 18.450732620465143}, 'accuracy': 0.8901660280970626, 'precision': 0.9005740636175419, 'fpr': 0.18518518518518517, 'tpr': 0.9655172413793105, 'pr_auc': 0.9873196080092633, 'roc_auc': 0.8901660280970627}, {'fold_num': 4, 'train_time': 1.3596110343933105, 'infer_time': 0.020461423056466237, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 5, 'train_time': 1.391338586807251, 'infer_time': 0.023659792813387783, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 0.9999999999999998, 'roc_auc': 1.0}, {'fold_num': 6, 'train_time': 1.30314040184021, 'infer_time': 0.01687570051713423, 'best_params': {'estimator__model__learning_rate': 0.0022982589327912445, 'estimator__model__max_depth': 11, 'estimator__model__n_estimators': 190, 'estimator__model__num_leaves': 23, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 18.450732620465143}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 7, 'train_time': 1.3466966152191162, 'infer_time': 0.020712072199041195, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 8, 'train_time': 1.3131515979766846, 'infer_time': 0.01779469576748935, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 0.9999999999999998, 'roc_auc': 1.0}, {'fold_num': 9, 'train_time': 1.346151351928711, 'infer_time': 0.02155303955078125, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}, {'fold_num': 10, 'train_time': 1.3514389991760254, 'infer_time': 0.018657337535511364, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 1.0, 'precision': 1.0, 'fpr': 0.0, 'tpr': 1.0, 'pr_auc': 1.0, 'roc_auc': 1.0}]}, 'pima.csv': {'RBoost': [{'fold_num': 1, 'train_time': 18.6440749168396, 'infer_time': 0.057468166599025976, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 18.94833755493164, 'infer_time': 0.10297205541040991, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 18.23672080039978, 'infer_time': 0.05959535573984121, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 19.04160976409912, 'infer_time': 0.10025965702998174, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35526315789473684, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 18.56830620765686, 'infer_time': 0.060626438685825894, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 19.07020878791809, 'infer_time': 0.10160966352982954, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 18.98558497428894, 'infer_time': 0.10125668017895191, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.35064935064935066, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 19.054433345794678, 'infer_time': 0.09947937804383117, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 10}, 'accuracy': 0.5, 'precision': 0.4216562658121099, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.3746993746993747, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 19.077831983566284, 'infer_time': 0.10084478478682668, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0028935185185185184, 'estimator__model__T': 10}, 'accuracy': 0.5192307692307693, 'precision': 0.7807017543859649, 'fpr': 0.0, 'tpr': 0.038461538461538464, 'pr_auc': 0.3674089068825911, 'roc_auc': 0.5192307692307693}, {'fold_num': 10, 'train_time': 18.68401288986206, 'infer_time': 0.02913098586233039, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.5, 'precision': 0.43282548476454297, 'fpr': 0.0, 'tpr': 0.0, 'pr_auc': 0.34210526315789475, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 2.4003207683563232, 'infer_time': 0.019559612521877535, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.6933333333333334, 'precision': 0.7167207792207793, 'fpr': 0.28, 'tpr': 0.6666666666666666, 'pr_auc': 0.560606875552732, 'roc_auc': 0.6933333333333334}, {'fold_num': 2, 'train_time': 2.382225513458252, 'infer_time': 0.019219014551732444, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.7762962962962963, 'precision': 0.8399735857362977, 'fpr': 0.04, 'tpr': 0.5925925925925926, 'pr_auc': 0.7947873173207214, 'roc_auc': 0.7762962962962962}, {'fold_num': 3, 'train_time': 2.36308217048645, 'infer_time': 0.018940343485250102, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.7433333333333333, 'precision': 0.7662337662337663, 'fpr': 0.18, 'tpr': 0.6666666666666666, 'pr_auc': 0.7502318029639552, 'roc_auc': 0.7433333333333334}, {'fold_num': 4, 'train_time': 2.3596444129943848, 'infer_time': 0.018893898307503043, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.6377777777777778, 'precision': 0.6683833407971339, 'fpr': 0.28, 'tpr': 0.5555555555555556, 'pr_auc': 0.51485306790973, 'roc_auc': 0.6377777777777778}, {'fold_num': 5, 'train_time': 2.3540358543395996, 'infer_time': 0.019578190592976358, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.6351851851851852, 'precision': 0.7050691244239631, 'fpr': 0.1, 'tpr': 0.37037037037037035, 'pr_auc': 0.6928633843174092, 'roc_auc': 0.6351851851851851}, {'fold_num': 6, 'train_time': 2.4087367057800293, 'infer_time': 0.020262482878449676, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7518518518518519, 'precision': 0.7708613225854606, 'fpr': 0.2, 'tpr': 0.7037037037037037, 'pr_auc': 0.6971125115873493, 'roc_auc': 0.7518518518518519}, {'fold_num': 7, 'train_time': 2.402390718460083, 'infer_time': 0.01992498125348772, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.7362962962962962, 'precision': 0.7744982290436836, 'fpr': 0.12, 'tpr': 0.5925925925925926, 'pr_auc': 0.7604692215640708, 'roc_auc': 0.7362962962962962}, {'fold_num': 8, 'train_time': 2.4413511753082275, 'infer_time': 0.018801007952008928, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.8103703703703704, 'precision': 0.8299543593661242, 'fpr': 0.12, 'tpr': 0.7407407407407407, 'pr_auc': 0.8052605986751337, 'roc_auc': 0.8103703703703704}, {'fold_num': 9, 'train_time': 2.407522201538086, 'infer_time': 0.020497723629600124, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.65, 'precision': 0.6898881740857475, 'fpr': 0.2, 'tpr': 0.5, 'pr_auc': 0.630586067910362, 'roc_auc': 0.6500000000000001}, {'fold_num': 10, 'train_time': 2.421612024307251, 'infer_time': 0.02038792559975072, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.8053846153846154, 'precision': 0.8275954592363263, 'fpr': 0.12, 'tpr': 0.7307692307692307, 'pr_auc': 0.7504094052274866, 'roc_auc': 0.8053846153846155}]}, 'led-display.csv': {'RBoost': [{'fold_num': 1, 'train_time': 138.99065947532654, 'infer_time': 0.8697295188903809, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0011111111111111111, 'estimator__model__T': 10}, 'accuracy': 0.09888888888888889, 'precision': 0.08228671328671329, 'fpr': 0.10536196078795002, 'tpr': 0.11322222222222221, 'pr_auc': 0.23497119158792873, 'roc_auc': 0.5039301307171361}, {'fold_num': 2, 'train_time': 138.7593433856964, 'infer_time': 0.8524012565612793, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 10, 'estimator__model__kappa': 0.0033333333333333335, 'estimator__model__T': 10}, 'accuracy': 0.19333333333333336, 'precision': 0.05100759144237405, 'fpr': 0.09041469158860466, 'tpr': 0.19333333333333336, 'pr_auc': 0.1445730299574612, 'roc_auc': 0.5514593208723644}, {'fold_num': 3, 'train_time': 138.5117335319519, 'infer_time': 0.8534955978393555, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0011111111111111111, 'estimator__model__T': 10}, 'accuracy': 0.11818181818181817, 'precision': 0.06506410256410257, 'fpr': 0.10523875375560769, 'tpr': 0.12727272727272726, 'pr_auc': 0.16329837190115817, 'roc_auc': 0.5110169867585599}, {'fold_num': 4, 'train_time': 135.2351188659668, 'infer_time': 0.44744253158569336, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.3333333333333333, 'estimator__model__T': 5}, 'accuracy': 0.05, 'precision': 0.011693121693121693, 'fpr': 0.113, 'tpr': 0.053000000000000005, 'pr_auc': 0.12244892115375045, 'roc_auc': 0.47}, {'fold_num': 5, 'train_time': 138.40097761154175, 'infer_time': 0.8944916725158691, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0022222222222222222, 'estimator__model__T': 10}, 'accuracy': 0.049090909090909095, 'precision': 0.01431372549019608, 'fpr': 0.10150936329588015, 'tpr': 0.0490909090909091, 'pr_auc': 0.18678674743300558, 'roc_auc': 0.4737907728975145}, {'fold_num': 6, 'train_time': 135.0249788761139, 'infer_time': 0.4435873031616211, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 50, 'estimator__model__kappa': 0.0033333333333333335, 'estimator__model__T': 5}, 'accuracy': 0.2525, 'precision': 0.10702067669172932, 'fpr': 0.08132247733810999, 'tpr': 0.23975000000000005, 'pr_auc': 0.15715303840175437, 'roc_auc': 0.579213761330945}, {'fold_num': 7, 'train_time': 135.6744842529297, 'infer_time': 0.4501461982727051, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.0022222222222222222, 'estimator__model__T': 5}, 'accuracy': 0.09272727272727273, 'precision': 0.06933333333333333, 'fpr': 0.09217033652988708, 'tpr': 0.08545454545454545, 'pr_auc': 0.18955141034716624, 'roc_auc': 0.49664210446232926}, {'fold_num': 8, 'train_time': 139.42188119888306, 'infer_time': 0.8697891235351562, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0022222222222222222, 'estimator__model__T': 10}, 'accuracy': 0.04, 'precision': 0.10491803278688523, 'fpr': 0.10563293136326846, 'tpr': 0.039, 'pr_auc': 0.12387522593710071, 'roc_auc': 0.4666835343183658}, {'fold_num': 9, 'train_time': 139.03780245780945, 'infer_time': 0.8710765838623047, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0022222222222222222, 'estimator__model__T': 10}, 'accuracy': 0.08272727272727273, 'precision': 0.025961021505376346, 'fpr': 0.10067813584667516, 'tpr': 0.08181818181818182, 'pr_auc': 0.11436241992616789, 'roc_auc': 0.4905700229857533}, {'fold_num': 10, 'train_time': 135.7590889930725, 'infer_time': 0.8609914779663086, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.0011111111111111111, 'estimator__model__T': 10}, 'accuracy': 0.1968686868686869, 'precision': 0.09091880341880343, 'fpr': 0.08848230920141034, 'tpr': 0.19605050505050503, 'pr_auc': 0.27912337922938213, 'roc_auc': 0.5537840979245474}], 'LGBoost': [{'fold_num': 1, 'train_time': 10.922813177108765, 'infer_time': 0.04851818084716797, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.6996212121212122, 'precision': 0.7593815987933636, 'fpr': 0.03378236869248106, 'tpr': 0.7021212121212121, 'pr_auc': 0.21617022037109077, 'roc_auc': 0.8341694217143655}, {'fold_num': 2, 'train_time': 11.046635389328003, 'infer_time': 0.06251096725463867, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.6947474747474749, 'precision': 0.7157850678733033, 'fpr': 0.03304310212395215, 'tpr': 0.6868080808080806, 'pr_auc': 0.35758838579289715, 'roc_auc': 0.8268824893420644}, {'fold_num': 3, 'train_time': 11.072091579437256, 'infer_time': 0.05862236022949219, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7151010101010101, 'precision': 0.7323113553113554, 'fpr': 0.031350009812149526, 'tpr': 0.7151060606060606, 'pr_auc': 0.3040825683737928, 'roc_auc': 0.8418780253969556}, {'fold_num': 4, 'train_time': 10.97070026397705, 'infer_time': 0.057282447814941406, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.7310101010101011, 'precision': 0.7747611416361415, 'fpr': 0.027596054382571233, 'tpr': 0.7256464646464647, 'pr_auc': 0.21022545202757495, 'roc_auc': 0.8490252051319468}, {'fold_num': 5, 'train_time': 10.880606412887573, 'infer_time': 0.0481104850769043, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.7029545454545454, 'precision': 0.725329640947288, 'fpr': 0.03341068229929979, 'tpr': 0.7019545454545455, 'pr_auc': 0.3557963049613034, 'roc_auc': 0.8342719315776228}, {'fold_num': 6, 'train_time': 11.167982816696167, 'infer_time': 0.06035566329956055, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7415909090909091, 'precision': 0.741525974025974, 'fpr': 0.028342615209249307, 'tpr': 0.735840909090909, 'pr_auc': 0.153245607729605, 'roc_auc': 0.8537491469408298}, {'fold_num': 7, 'train_time': 11.207753419876099, 'infer_time': 0.048460960388183594, 'best_params': {'estimator__model__learning_rate': 0.016381150996555183, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 168, 'estimator__model__num_leaves': 13, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 5.149250290637646}, 'accuracy': 0.7601010101010102, 'precision': 0.7968279220779221, 'fpr': 0.026043818852807616, 'tpr': 0.762919191919192, 'pr_auc': 0.11346613506045475, 'roc_auc': 0.8684376865331921}, {'fold_num': 8, 'train_time': 11.299108266830444, 'infer_time': 0.05522966384887695, 'best_params': {'estimator__model__learning_rate': 0.05630456468833846, 'estimator__model__max_depth': 15, 'estimator__model__n_estimators': 216, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 30.724815832695242}, 'accuracy': 0.6678787878787878, 'precision': 0.6838161838161838, 'fpr': 0.036460619280844, 'tpr': 0.6701010101010103, 'pr_auc': 0.2351528590219903, 'roc_auc': 0.8168201954100831}, {'fold_num': 9, 'train_time': 11.079431772232056, 'infer_time': 0.07304906845092773, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.7496969696969698, 'precision': 0.7645454545454545, 'fpr': 0.027352937948443564, 'tpr': 0.7491111111111112, 'pr_auc': 0.3645828499348638, 'roc_auc': 0.8608790865813337}, {'fold_num': 10, 'train_time': 10.563833475112915, 'infer_time': 0.05624532699584961, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.7630303030303031, 'precision': 0.775414862914863, 'fpr': 0.027170514878380046, 'tpr': 0.7685757575757576, 'pr_auc': 0.10367088331052637, 'roc_auc': 0.8707026213486888}]}, 'baseball.csv': {'RBoost': [{'fold_num': 1, 'train_time': 128.63926339149475, 'infer_time': 0.2196849282108136, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8289151258632211, 'fpr': 0.04477611940298507, 'tpr': 0.04477611940298507, 'pr_auc': 0.07556273406923923, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 128.81684613227844, 'infer_time': 0.3384832125991138, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8289151258632211, 'fpr': 0.04477611940298507, 'tpr': 0.04477611940298507, 'pr_auc': 0.0910383207433364, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 128.72359251976013, 'infer_time': 0.4227677387977714, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8153820449988862, 'fpr': 0.04477611940298507, 'tpr': 0.04477611940298507, 'pr_auc': 0.09663602746495314, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 129.94202375411987, 'infer_time': 0.22295695632251342, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8153820449988862, 'fpr': 0.04477611940298507, 'tpr': 0.04477611940298507, 'pr_auc': 0.08949269881422214, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 129.83366346359253, 'infer_time': 0.38531645020442223, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8153820449988862, 'fpr': 0.05223880597014925, 'tpr': 0.05223880597014925, 'pr_auc': 0.09956983922131049, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 129.34810090065002, 'infer_time': 0.2903511275106402, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8153820449988862, 'fpr': 0.05223880597014925, 'tpr': 0.05223880597014925, 'pr_auc': 0.0966682938356531, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 128.6159429550171, 'infer_time': 0.40116950647154853, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8153820449988862, 'fpr': 0.05223880597014925, 'tpr': 0.05223880597014925, 'pr_auc': 0.09074816624127985, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 130.51686096191406, 'infer_time': 0.4800540297778685, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8289151258632211, 'fpr': 0.05223880597014925, 'tpr': 0.05223880597014925, 'pr_auc': 0.11239515238623751, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 128.7780363559723, 'infer_time': 0.21860136914609082, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8289151258632211, 'fpr': 0.05223880597014925, 'tpr': 0.05223880597014925, 'pr_auc': 0.1084965645970187, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 129.14025211334229, 'infer_time': 0.21833804116320255, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001658374792703151, 'estimator__model__T': 10}, 'accuracy': 0.3333333333333333, 'precision': 0.8289151258632211, 'fpr': 0.9104477611940298, 'tpr': 0.9104477611940298, 'pr_auc': 0.8392687555377638, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 9.491098403930664, 'infer_time': 0.024644296560714492, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.611111111111111, 'precision': 0.9380361969679163, 'fpr': 0.026119402985074626, 'tpr': 0.5149253731343284, 'pr_auc': 0.08200063325354927, 'roc_auc': 0.7444029850746269}, {'fold_num': 2, 'train_time': 8.714486360549927, 'infer_time': 0.024227953668850572, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.6557377049180327, 'precision': 0.9303597221266938, 'fpr': 0.05083955223880597, 'tpr': 0.52091999021287, 'pr_auc': 0.09002842413140515, 'roc_auc': 0.735040218987032}, {'fold_num': 3, 'train_time': 9.211098432540894, 'infer_time': 0.02483467557537022, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7405221041584676, 'precision': 0.9464521654024957, 'fpr': 0.0320714223966479, 'tpr': 0.5948533601179462, 'pr_auc': 0.10244072837109633, 'roc_auc': 0.7813909688606493}, {'fold_num': 4, 'train_time': 9.167258739471436, 'infer_time': 0.024994807456856342, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.6929030565394201, 'precision': 0.9407838854507949, 'fpr': 0.04221774230000813, 'tpr': 0.46585549231410833, 'pr_auc': 0.11089097730126077, 'roc_auc': 0.7118188750070502}, {'fold_num': 5, 'train_time': 9.203000545501709, 'infer_time': 0.024190589563170477, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5528007346189164, 'precision': 0.8898365316275764, 'fpr': 0.039030082401439195, 'tpr': 0.08165782656963118, 'pr_auc': 0.09064685790505102, 'roc_auc': 0.521313872084096}, {'fold_num': 6, 'train_time': 9.220317363739014, 'infer_time': 0.024402319495357684, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.6532205168568805, 'precision': 0.9174776119402984, 'fpr': 0.045440574233616894, 'tpr': 0.21768665527145853, 'pr_auc': 0.0796933332893688, 'roc_auc': 0.5861230405189207}, {'fold_num': 7, 'train_time': 9.352362632751465, 'infer_time': 0.02428133096267928, 'best_params': {'estimator__model__learning_rate': 0.21354175955467047, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 220, 'estimator__model__num_leaves': 18, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 8.624629167005763}, 'accuracy': 0.5949101403646858, 'precision': 0.8996815920398009, 'fpr': 0.04304845209145068, 'tpr': 0.20979224303511956, 'pr_auc': 0.07473327741001835, 'roc_auc': 0.5833718954718344}, {'fold_num': 8, 'train_time': 9.157311201095581, 'infer_time': 0.024743934175861414, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.6203747072599531, 'precision': 0.9185122773230621, 'fpr': 0.03697168342502831, 'tpr': 0.3334702366388199, 'pr_auc': 0.08210438399806506, 'roc_auc': 0.6482492766068957}, {'fold_num': 9, 'train_time': 9.193864822387695, 'infer_time': 0.017358295953095848, 'best_params': {'estimator__model__learning_rate': 0.1257563696803999, 'estimator__model__max_depth': 17, 'estimator__model__n_estimators': 148, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 9.566126547686462}, 'accuracy': 0.6040593286494926, 'precision': 0.933731343283582, 'fpr': 0.050441689191836094, 'tpr': 0.4564997028906987, 'pr_auc': 0.08036815873680178, 'roc_auc': 0.7030290068494313}, {'fold_num': 10, 'train_time': 9.203765869140625, 'infer_time': 0.025261693925999883, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7591725214676034, 'precision': 0.9464581852641555, 'fpr': 0.37976456301171313, 'tpr': 0.9552238805970149, 'pr_auc': 0.9276976909552532, 'roc_auc': 0.7877296587926509}]}, 'car.csv': {'RBoost': [{'fold_num': 1, 'train_time': 68.82837057113647, 'infer_time': 0.28368227743689034, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5357822604274269, 'roc_auc': 0.5}, {'fold_num': 2, 'train_time': 68.76358246803284, 'infer_time': 0.282010591099028, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5447419986806904, 'roc_auc': 0.5}, {'fold_num': 3, 'train_time': 68.56471657752991, 'infer_time': 0.3218485440822006, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5028816842074016, 'roc_auc': 0.5}, {'fold_num': 4, 'train_time': 68.7764310836792, 'infer_time': 0.3212118424432126, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5216336113536642, 'roc_auc': 0.5}, {'fold_num': 5, 'train_time': 68.58762049674988, 'infer_time': 0.2839840905514756, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5360599401331643, 'roc_auc': 0.5}, {'fold_num': 6, 'train_time': 68.8888795375824, 'infer_time': 0.5773602193490618, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.49539725097848664, 'roc_auc': 0.5}, {'fold_num': 7, 'train_time': 67.90307307243347, 'infer_time': 0.47541767186512146, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.49367172151508454, 'roc_auc': 0.5}, {'fold_num': 8, 'train_time': 68.57251238822937, 'infer_time': 0.3875748959579909, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 1, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.48919108556918045, 'fpr': 0.6994219653179191, 'tpr': 0.6994219653179191, 'pr_auc': 0.5097227728738131, 'roc_auc': 0.5}, {'fold_num': 9, 'train_time': 68.72509503364563, 'infer_time': 0.650583311568859, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.49489588967009196, 'fpr': 0.7034883720930233, 'tpr': 0.7034883720930233, 'pr_auc': 0.5512416231365495, 'roc_auc': 0.5}, {'fold_num': 10, 'train_time': 68.30351638793945, 'infer_time': 0.6007219469824503, 'best_params': {'estimator__model__verbose': False, 'estimator__model__silent': True, 'estimator__model__reg': 100, 'estimator__model__kappa': 0.001286008230452675, 'estimator__model__T': 10}, 'accuracy': 0.25, 'precision': 0.49489588967009196, 'fpr': 0.22093023255813954, 'tpr': 0.22093023255813954, 'pr_auc': 0.38773894609168935, 'roc_auc': 0.5}], 'LGBoost': [{'fold_num': 1, 'train_time': 6.161433458328247, 'infer_time': 0.020803054633168127, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.6057692307692308, 'precision': 0.8194717522467406, 'fpr': 0.22722542677034527, 'tpr': 0.8660886319845857, 'pr_auc': 0.4188830910866328, 'roc_auc': 0.8194316026071203}, {'fold_num': 2, 'train_time': 6.009360074996948, 'infer_time': 0.020348267748176708, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.6737996851633216, 'precision': 0.8844653179190751, 'fpr': 0.06897592960055215, 'tpr': 0.7669969721992843, 'pr_auc': 0.4195031159356717, 'roc_auc': 0.849010521299366}, {'fold_num': 3, 'train_time': 6.030642509460449, 'infer_time': 0.02128540435967418, 'best_params': {'estimator__model__learning_rate': 0.25556761107561105, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 310, 'estimator__model__num_leaves': 39, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 38.07594181338125}, 'accuracy': 0.6506296733569461, 'precision': 0.7956846721148096, 'fpr': 0.3614873608834441, 'tpr': 0.8133773740710157, 'pr_auc': 0.49539583080151356, 'roc_auc': 0.7259450065937858}, {'fold_num': 4, 'train_time': 6.059135913848877, 'infer_time': 0.020983591245088962, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.7134002361275088, 'precision': 0.8786127167630058, 'fpr': 0.06609583008084426, 'tpr': 0.767960363336086, 'pr_auc': 0.3960028663034864, 'roc_auc': 0.8509322666276208}, {'fold_num': 5, 'train_time': 6.15866231918335, 'infer_time': 0.021700225124469383, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.5631641086186541, 'precision': 0.8838841022285235, 'fpr': 0.024649658363705303, 'tpr': 0.9075144508670521, 'pr_auc': 0.43367416632027156, 'roc_auc': 0.9414323962516734}, {'fold_num': 6, 'train_time': 6.082172632217407, 'infer_time': 0.021009775944527864, 'best_params': {'estimator__model__learning_rate': 0.1580341587319542, 'estimator__model__max_depth': 13, 'estimator__model__n_estimators': 231, 'estimator__model__num_leaves': 27, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 25.00021143575623}, 'accuracy': 0.5541384452867706, 'precision': 0.9269364161849711, 'fpr': 0.04967969303229419, 'tpr': 0.9075144508670522, 'pr_auc': 0.44764697778172235, 'roc_auc': 0.928917378917379}, {'fold_num': 7, 'train_time': 6.056411504745483, 'infer_time': 0.022919880861491826, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.9492714223575467, 'precision': 0.9219653179190751, 'fpr': 0.025137157493171143, 'tpr': 0.8959537572254336, 'pr_auc': 0.43101290839187867, 'roc_auc': 0.9354082998661312}, {'fold_num': 8, 'train_time': 6.328470230102539, 'infer_time': 0.02058668632727827, 'best_params': {'estimator__model__learning_rate': 0.1775605554273027, 'estimator__model__max_depth': 14, 'estimator__model__n_estimators': 244, 'estimator__model__num_leaves': 20, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 40.429157365715476}, 'accuracy': 0.8627819548872181, 'precision': 0.9592638217673752, 'fpr': 0.016131667622022106, 'tpr': 0.9306358381502892, 'pr_auc': 0.44010970878712957, 'roc_auc': 0.9572520852641335}, {'fold_num': 9, 'train_time': 6.19590950012207, 'infer_time': 0.021522821382034655, 'best_params': {'estimator__model__learning_rate': 0.08771790309879973, 'estimator__model__max_depth': 7, 'estimator__model__n_estimators': 248, 'estimator__model__num_leaves': 38, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 39.73080413472752}, 'accuracy': 0.9703131796433232, 'precision': 0.9485727068728905, 'fpr': 0.027230406851453465, 'tpr': 0.941860465116279, 'pr_auc': 0.4438589892355069, 'roc_auc': 0.9573150291324127}, {'fold_num': 10, 'train_time': 6.372692823410034, 'infer_time': 0.022335107936415563, 'best_params': {'estimator__model__learning_rate': 0.13569084963936826, 'estimator__model__max_depth': 10, 'estimator__model__n_estimators': 201, 'estimator__model__num_leaves': 41, 'estimator__model__objective': 'binary', 'estimator__model__reg_lambda': 12.644452672673154}, 'accuracy': 0.8338408003479774, 'precision': 0.9452363090772694, 'fpr': 0.022401857148779174, 'tpr': 0.5483880757053117, 'pr_auc': 0.46385542782809874, 'roc_auc': 0.7629931092782662}]}}
Done writing results in part 3
